/*
# Decision-Game
Team Giraffe's decsion game project for Software Engineering I.
*/
// Copyright 2018 The Flutter team. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//Decision Game Code for Team Giraffe

import 'package:flutter/material.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Welcome to Flutter',
      theme: ThemeData(
        primaryColor: Colors.purple,
      ), //changes color to purple
      home: FirstScreen(),
    );
  }
}

class FirstScreen extends StatefulWidget {
  @override
  QuestionScreen createState() => QuestionScreen();
} //creates the QuestionScreen Class

//This screen asks the question
class QuestionScreen extends State<FirstScreen> {
  final TextStyle _biggerFont = const TextStyle(fontSize: 25.0);
  final TextStyle _titleFont = const TextStyle(fontSize: 20.0);

  void _nextScreen() {                           //navigates to the second screen
    Navigator.of(context).push (
        MaterialPageRoute<void>(
            builder: (BuildContext context) {
              return SecondScreen();
            }
        )
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Welcome to the Decision Game',
            style: _titleFont), //Top of the screen
        actions: <Widget>[
          IconButton(icon: Icon(Icons.navigate_next), onPressed: _nextScreen), //creates the 'next' arrow
        ],
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: TextFormField(
          decoration: InputDecoration(
              labelText: 'Should I...'
          ),
          style: _biggerFont, //Increase font size
        ),
      ),
      //child:

    );

  }
}

//Creates the OutcomeScreen Class
class SecondScreen extends StatefulWidget {
  @override
  OutcomeScreen createState() => OutcomeScreen();

}

//This screen will display the outcomes
class OutcomeScreen extends State<SecondScreen> {
  int _count = 1;

  final TextStyle _titleFont = const TextStyle(fontSize: 20.0);

  @override
  Widget build(BuildContext context) {
    List<Widget> _outcomes =
        new List.generate(_count, (int i) => new ContactColumn());

   return new Scaffold(

       body: new LayoutBuilder(builder: (context, constraint) {
         final _maxHeight= constraint.biggest.height;
         final _biggerFont = TextStyle(fontSize: _maxHeight/ 6);

        return new Center(
          child: new Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
           new Container(
           height: _maxHeight,
           child: new ListView(
             children: _outcomes,
             scrollDirection: Axis.vertical,
           ),
         ),


            ],
         ),
        );
       }),
     bottomNavigationBar: BottomAppBar(
       shape: const CircularNotchedRectangle(),
       child: Container(height: 50.0,),
     ),
     floatingActionButton: FloatingActionButton(
       onPressed: _addNewContactColumn,
       tooltip: 'Increment Counter',
       backgroundColor: Colors.purple,
       child: Icon(Icons.add),
     ),
     floatingActionButtonLocation:FloatingActionButtonLocation.centerDocked,
     appBar: AppBar(
       title: Text('Possible Outcomes',
         style: _titleFont,
       ), //End of Text
       actions: <Widget>[
         IconButton(icon: Icon(Icons.navigate_next), onPressed: _nextScreen), //creates the 'next' arrow
       ],
     ),
   );


  }

  void _addNewContactColumn() {
    setState(() {
      _count = _count + 1;
    });
  }

  void _nextScreen() { //navigates to the Third screen
    Navigator.of(context).push (
        MaterialPageRoute<void>(
            builder: (BuildContext context) {
              return ThirdScreen();
            }
        )
    );
  }
}

class ContactColumn extends StatefulWidget {
  @override
  State<StatefulWidget> createState() => new _ContactColumn();
}

class _ContactColumn extends State<ContactColumn>
{
  final TextStyle _biggerFont = const TextStyle(fontSize: 25.0);

  @override
  Widget build(BuildContext context)
  {
    return new Container(
        child: new Column(children: <Widget>[    //TODO: Add remove functionality to Contact Column children
        new TextFormField(
          decoration: new InputDecoration(
            labelText: 'Enter Outcome'
          ),
          style: _biggerFont,
        ),
      ]));

  }
}



//Creates the Goodness Screen class
class ThirdScreen extends StatefulWidget {
  @override
  GoodScreen createState() => GoodScreen();
}

//Display the Goodness Screen
class GoodScreen extends State<ThirdScreen> {
  final TextStyle _biggerFont = const TextStyle(fontSize: 25.0);
  final TextStyle _titleFont = const TextStyle(fontSize: 20.0);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
        title: Text('Goodness Rating',
        style: _titleFont), //Top of the screen
    actions: <Widget>[
    IconButton(icon: Icon(Icons.navigate_next), onPressed: _nextScreen), //creates the 'next' arrow
    ],
    ),
    );
  }

  void _nextScreen() { //navigates to the Third screen
    Navigator.of(context).push (
        MaterialPageRoute<void>(
            builder: (BuildContext context) {
              return FourthScreen();
            }
        )
    );
  }
}

//Creates the Probability Screen Class
class FourthScreen extends StatefulWidget {
  @override
  ProbScreen createState() => ProbScreen();
}

//Displays the Probability Screen
class ProbScreen extends State<FourthScreen> {
  final TextStyle _biggerFont = const TextStyle(fontSize: 25.0);
  final TextStyle _titleFont = const TextStyle(fontSize: 20.0);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Probability',
            style: _titleFont), //Top of the screen
        actions: <Widget>[
          IconButton(icon: Icon(Icons.navigate_next), onPressed: _nextScreen), //creates the 'next' arrow
        ],
      ),
    );
  }


  void _nextScreen() { //navigates to the Third screen
    Navigator.of(context).push (
        MaterialPageRoute<void>(
            builder: (BuildContext context) {
              return FifthScreen();
            }
        )
    );
  }
}

//Creates the Overview Screen
class FifthScreen extends StatefulWidget {
  @override
  OverviewScreen createState() => OverviewScreen();
}

//Displays an overview of all the inputs
class OverviewScreen extends State<FifthScreen> {
  final TextStyle _biggerFont = const TextStyle(fontSize: 25.0);
  final TextStyle _titleFont = const TextStyle(fontSize: 20.0);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Overview',
            style: _titleFont), //Top of the screen
        actions: <Widget>[
          IconButton(icon: Icon(Icons.navigate_next), onPressed: _nextScreen), //creates the 'next' arrow
        ],
      ),
    );
  }

  void _nextScreen() { //navigates to the Third screen
    Navigator.of(context).push (
        MaterialPageRoute<void>(
            builder: (BuildContext context) {
              return SixthScreen();
            }
        )
    );
  }
}

//Creates the output screen
class SixthScreen extends StatefulWidget {
  @override
  OutputScreen createState() => OutputScreen();
}

//Displays the output of the decision game
class OutputScreen extends State<SixthScreen> {
  final TextStyle _biggerFont = const TextStyle(fontSize: 25.0);
  final TextStyle _titleFont = const TextStyle(fontSize: 20.0);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Output',
            style: _titleFont), //Top of the screen
      ),
    );
  }
}















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































